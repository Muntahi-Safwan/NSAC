// Radio Edge Server Database Schema
// This schema is specifically designed for radio broadcast alert delivery

generator client {
  provider = "prisma-client-py"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Radio alert broadcast tracking
model RadioAlert {
  id                String   @id @default(cuid())
  alertId           String   @map("alert_id")
  alertType         String   @map("alert_type")
  priority          String
  title             String
  message           String
  location          String?
  coordinates       Json?
  
  // Radio-specific fields
  broadcastFrequencies String[] @map("broadcast_frequencies")
  audioDuration       Int      @map("audio_duration")
  repeatCount         Int      @map("repeat_count")
  toneAlert           Boolean  @default(false) @map("tone_alert")
  easCode             String?  @map("eas_code")
  
  // Audio content
  audioText           String   @map("audio_text")
  audioFilePath       String?  @map("audio_file_path")
  backgroundMusic     Boolean  @default(false) @map("background_music")
  
  // Broadcast status
  status              String   @default("pending") // pending, broadcasting, completed, failed
  currentRepeat       Int      @default(0) @map("current_repeat")
  broadcastStartTime  DateTime? @map("broadcast_start_time")
  broadcastEndTime    DateTime? @map("broadcast_end_time")
  
  // Timestamps
  createdAt           DateTime @default(now()) @map("created_at")
  updatedAt           DateTime @updatedAt @map("updated_at")
  expiresAt           DateTime? @map("expires_at")
  
  // Relations
  broadcastLogs       BroadcastLog[]
  
  @@map("radio_alerts")
}

// Individual broadcast attempts and results
model BroadcastLog {
  id                String   @id @default(cuid())
  radioAlertId      String   @map("radio_alert_id")
  frequency         String
  transmitterId     String?  @map("transmitter_id")
  
  // Broadcast details
  status            String   // pending, broadcasting, completed, failed
  signalStrength    Float?   @map("signal_strength")
  audioQuality      String?  @map("audio_quality")
  coverageArea      Json?    @map("coverage_area")
  
  // Error handling
  errorCode         String?  @map("error_code")
  errorMessage      String?  @map("error_message")
  retryCount        Int      @default(0) @map("retry_count")
  
  // Timestamps
  createdAt         DateTime @default(now()) @map("created_at")
  startedAt         DateTime? @map("started_at")
  completedAt       DateTime? @map("completed_at")
  failedAt          DateTime? @map("failed_at")
  
  // Relations
  radioAlert        RadioAlert @relation(fields: [radioAlertId], references: [id])
  
  @@map("broadcast_logs")
}

// Radio station configuration
model RadioStation {
  id                String   @id @default(cuid())
  stationName       String   @map("station_name")
  callSign          String   @unique @map("call_sign")
  frequency         String
  frequencyType     String   @map("frequency_type") // AM, FM
  power             Int      // Watts
  antennaGain       Float    @map("antenna_gain")
  
  // Location
  location          String
  coordinates       Json
  coverageRadius    Float    @map("coverage_radius") // km
  
  // Status
  active            Boolean  @default(true)
  maintenanceMode   Boolean  @default(false) @map("maintenance_mode")
  
  // Timestamps
  createdAt         DateTime @default(now()) @map("created_at")
  updatedAt         DateTime @updatedAt @map("updated_at")
  lastMaintenance   DateTime? @map("last_maintenance")
  
  @@map("radio_stations")
}

// Audio file management
model AudioFile {
  id                String   @id @default(cuid())
  fileName          String   @map("file_name")
  filePath          String   @map("file_path")
  fileSize          Int      @map("file_size")
  duration          Int      // seconds
  
  // Audio properties
  sampleRate        Int      @map("sample_rate")
  bitDepth          Int      @map("bit_depth")
  channels          Int
  format            String
  
  // Content
  textContent       String?  @map("text_content")
  language          String
  voice             String?
  
  // Status
  status            String   @default("active") // active, archived, deleted
  
  // Timestamps
  createdAt         DateTime @default(now()) @map("created_at")
  updatedAt         DateTime @updatedAt @map("updated_at")
  
  @@unique([filePath])
  @@map("audio_files")
}

// Emergency Alert System (EAS) configuration
model EASConfiguration {
  id                String   @id @default(cuid())
  originatorId      String   @map("originator_id")
  eventCodes        String[] @map("event_codes")
  duration          Int      // seconds
  
  // Audio settings
  toneEnabled       Boolean  @default(true) @map("tone_enabled")
  toneFrequency     Int      @map("tone_frequency")
  toneDuration      Int      @map("tone_duration")
  
  // Compliance
  fccCompliant      Boolean  @default(true) @map("fcc_compliant")
  fccLicenseNumber  String?  @map("fcc_license_number")
  
  // Timestamps
  createdAt         DateTime @default(now()) @map("created_at")
  updatedAt         DateTime @updatedAt @map("updated_at")
  
  @@map("eas_configuration")
}

