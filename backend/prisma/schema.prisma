// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(uuid())
  email         String   @unique
  password      String
  firstName     String?
  lastName      String?
  phoneNumbers  String[] @default([])
  socialUsernames Json?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@map("users")
}

model AirQualityForecast {
  id               Int      @id @default(autoincrement())
  timestamp        DateTime // Forecast valid time
  forecastInitTime DateTime // When the forecast was initialized (00z or 12z)

  // Location (filtered to TEMPO coverage: North America)
  latitude         Float    // Range: ~15°N to ~60°N
  longitude        Float    // Range: ~-130°W to ~-60°W
  level            Float    // Atmospheric level (surface = 0)

  // Pollutant concentrations (μg/m³ unless noted)
  // All available from GEOS-CF
  pm25             Float?   // PM2.5 - Particulate Matter < 2.5μm
  no2              Float?   // NO2 - Nitrogen Dioxide
  o3               Float?   // O3 - Ozone
  so2              Float?   // SO2 - Sulfur Dioxide
  co               Float?   // CO - Carbon Monoxide (ppbv)
  hcho             Float?   // HCHO - Formaldehyde

  // Calculated AQI
  aqi              Float?   // Overall Air Quality Index (0-500)

  // Metadata
  source           String   @default("GEOS-CF")
  createdAt        DateTime @default(now())

  // Composite indexes for efficient geospatial + time queries
  // PostGIS will use these for nearest-neighbor searches
  @@index([latitude, longitude])
  @@index([timestamp])
  @@index([forecastInitTime])
  @@index([timestamp, latitude, longitude])
  @@index([source])
  @@map("air_quality_forecasts")
}
